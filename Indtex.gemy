<!DOCTYPE html>
<html lang="ar">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>لعبة الفراخ</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #f5f7fa, #c3cfe2);
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            direction: rtl;
        }

        .container {
            text-align: center;
            background: white;
            padding: 40px 60px;
            border-radius: 15px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            animation: fadeIn 1s ease-in-out;
        }

        h1 {
            color: #333;
            font-size: 28px;
            margin-bottom: 20px;
        }

        input[type="text"] {
            padding: 10px 15px;
            font-size: 16px;
            border: 2px solid #ccc;
            border-radius: 5px;
            transition: all 0.3s ease;
            width: 250px;
        }

        input[type="text"]:focus {
            border-color: #7b1fa2;
            outline: none;
        }

        button {
            margin-top: 15px;
            padding: 10px 20px;
            font-size: 16px;
            color: white;
            background: #7b1fa2;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        button:hover {
            background: #512da8;
        }

        #response {
            margin-top: 20px;
            font-size: 20px;
            color: #512da8;
            animation: slideIn 1s ease-in-out;
        }

        #game-container {
            display: none;
            margin-top: 20px;
            position: relative;
            width: 400px;
            height: 400px;
            border: 2px solid #ccc;
            background: #f9e79f;
            overflow: hidden;
            touch-action: none; /* Enable custom touch handling */
        }

        #chicken {
            position: absolute;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            width: 50px;
            height: 50px;
            background: url('https://img.icons8.com/emoji/48/000000/chicken-emoji.png') no-repeat center center;
            background-size: contain;
        }

        .box {
            position: absolute;
            width: 40px;
            height: 40px;
            background: red;
        }

        .fire {
            position: absolute;
            width: 10px;
            height: 40px;
            background: orange;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(-20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateX(50px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>مرحباً مروه! أدخل الاسم وستحصل على الرد!</h1>
        <input type="text" id="nameInput" placeholder="اكتب اسم هنا" />
        <button onclick="respond()">ارسال</button>
        <div id="response"></div>
        <div id="game-container">
            <div id="chicken"></div>
        </div>
    </div>

    <script>
        let chicken = null;
        let boxes = [];
        let gameContainer = null;
        let gameOver = false;
        let isShooting = false;

        function respond() {
            const input = document.getElementById("nameInput").value.trim();
            const responseDiv = document.getElementById("response");
            gameContainer = document.getElementById("game-container");

            if (input === "جمال") {
                responseDiv.textContent = "يا جيمي";
                resetGame();
            } else if (input === "سنية") {
                responseDiv.textContent = "يا سوسو";
                resetGame();
            } else if (input === "احمد") {
                responseDiv.textContent = "ابدأ اللعب!";
                startGame();
            } else if (input !== "") {
                responseDiv.textContent = "انت مش زيهم يا صاحبي!";
                resetGame();
            } else {
                responseDiv.textContent = "";
                resetGame();
            }
        }

        function startGame() {
            gameContainer.style.display = "block";

            chicken = document.getElementById("chicken");
            boxes = [];
            gameOver = false;
            isShooting = false;

            // Touch controls
            let startX = 0;
            let startY = 0;

            gameContainer.addEventListener("touchstart", (event) => {
                if (gameOver) return;

                const touch = event.touches[0];
                startX = touch.clientX - chicken.offsetLeft;
                startY = touch.clientY - chicken.offsetTop;

                // Start shooting when touch starts
                isShooting = true;
                shootFire();
            });

            gameContainer.addEventListener("touchmove", (event) => {
                if (gameOver) return;

                const touch = event.touches[0];
                const containerRect = gameContainer.getBoundingClientRect();

                // Move chicken horizontally and vertically
                const newLeft = touch.clientX - containerRect.left - startX;
                const newBottom = containerRect.height - (touch.clientY - containerRect.top) - startY;

                if (newLeft >= 0 && newLeft <= containerRect.width - chicken.offsetWidth) {
                    chicken.style.left = newLeft + "px";
                }

                if (newBottom >= 0 && newBottom <= containerRect.height - chicken.offsetHeight) {
                    chicken.style.bottom = newBottom + "px";
                }
            });

            gameContainer.addEventListener("touchend", () => {
                // Stop shooting when touch ends
                isShooting = false;
            });

            // Spawn boxes
            spawnBox();

            // Check collisions
            setInterval(checkCollisions, 100);
        }

        function shootFire() {
            if (!isShooting) return;

            // Create multiple fire elements
            for (let i = -5; i <= 5; i += 2) {
                const fire = document.createElement("div");
                fire.className = "fire";
                fire.style.left = chicken.offsetLeft + chicken.offsetWidth / 2 - fire.offsetWidth / 2 + i * 5 + "px";
                fire.style.bottom = chicken.offsetTop + chicken.offsetHeight + "px";
                gameContainer.appendChild(fire);

                const interval = setInterval(() => {
                    if (parseInt(fire.style.bottom || 0) + fire.offsetHeight >= gameContainer.offsetHeight) {
                        fire.remove();
                        clearInterval(interval);
                    } else {
                        fire.style.bottom = parseInt(fire.style.bottom || 0) + 10 + "px";
                    }

                    // Check if fire hits a box
                    for (let box of boxes) {
                        if (
                            fire.offsetLeft < box.offsetLeft + box.offsetWidth &&
                            fire.offsetLeft + fire.offsetWidth > box.offsetLeft &&
                            fire.offsetTop < box.offsetTop + box.offsetHeight &&
                            fire.offsetTop + fire.offsetHeight > box.offsetTop
                        ) {
                            box.remove();
                            boxes = boxes.filter(b => b !== box);
                            fire.remove();
                            clearInterval(interval);
                            break;
                        }
                    }
                }, 50);
            }

            // Re-shoot after a short delay if still shooting
            setTimeout(() => {
                if (isShooting) {
                    shootFire();
                }
            }, 100); // Adjust this value to control shooting frequency
        }

        function spawnBox() {
            if (gameOver) return;

            const box = document.createElement("div");
            box.className = "box";
            box.style.top = "0px";
            box.style.left = Math.random() * (gameContainer.offsetWidth - 40) + "px";
            gameContainer.appendChild(box);
            boxes.push(box);

            const interval = setInterval(() => {
                if (parseInt(box.style.top || 0) + box.offsetHeight >= gameContainer.offsetHeight) {
                    checkGameOver();
                    clearInterval(interval);
                } else {
                    box.style.top = parseInt(box.style.top || 0) + 5 + "px";
                }

                // Check if box hits chicken
                if (
                    chicken.offsetLeft < box.offsetLeft + box.offsetWidth &&
                    chicken.offsetLeft + chicken.offsetWidth > box.offsetLeft &&
                    chicken.offsetTop < box.offsetTop + box.offsetHeight &&
                    chicken.offsetTop + chicken.offsetHeight > box.offsetTop
                ) {
                    checkGameOver();
                    clearInterval(interval);
                }
            }, 50);

            setTimeout(() => {
                clearInterval(interval);
                box.remove();
                boxes = boxes.filter(b => b !== box);
            }, 5000);

            setTimeout(spawnBox, Math.random() * 2000 + 1000); // Spawn next box after random time
        }

        function checkCollisions() {
            for (let box of boxes) {
                if (
                    chicken.offsetLeft < box.offsetLeft + box.offsetWidth &&
                    chicken.offsetLeft + chicken.offsetWidth > box.offsetLeft &&
                    chicken.offsetTop < box.offsetTop + box.offsetHeight &&
                    chicken.offsetTop + chicken.offsetHeight > box.offsetTop
                ) {
                    checkGameOver();
                    break;
                }
            }
        }

        function checkGameOver() {
            if (!gameOver) {
                gameOver = true;
                alert("إنتهت اللعبة!");
                resetGame();
            }
        }

        function resetGame() {
            gameContainer.style.display = "none";
            document.getElementById("chicken").style.left = "50%";
            document.getElementById("chicken").style.bottom = "20px";
            const fires = document.querySelectorAll(".fire");
            fires.forEach(fire => fire.remove());
            boxes.forEach(box => box.remove());
            boxes = [];
            gameOver = false;
            isShooting = false;
        }
    </script>
</body>
</html>
